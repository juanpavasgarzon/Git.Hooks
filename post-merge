#!/bin/bash

# Ensure we are on the master branch
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

if [[ "$CURRENT_BRANCH" != "master" ]]; then
    echo "Not on master branch. Exiting..."
    exit 0
fi

# Get the branch name of the last merge (source branch)
SOURCE_BRANCH=$(git log --merges --pretty=format:"%P" -n 1 | awk '{print $2}' | xargs git name-rev --name-only)

echo "Detected merge from branch: $SOURCE_BRANCH"

# Extract latest tag
LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
LATEST_TAG=${LATEST_TAG//v/} # Remove "v" prefix
IFS='.' read -r MAJOR MINOR PATCH <<< "$LATEST_TAG"

# Apply versioning rules based on the source branch
if [[ "$SOURCE_BRANCH" == release/* ]]; then
    MAJOR=$((MAJOR + 1))
    MINOR=0
    PATCH=0
elif [[ "$SOURCE_BRANCH" == bugfix/* ]]; then
    MINOR=$((MINOR + 1))
    PATCH=0
elif [[ "$SOURCE_BRANCH" == hotfix/* ]]; then
    PATCH=$((PATCH + 1))
else
    echo "❌ No versioning applied. Branch does not match release, bugfix, or hotfix."
    exit 1
fi

# Create and push the new version tag
NEW_TAG="v$MAJOR.$MINOR.$PATCH"
echo "Creating new tag: $NEW_TAG"
git tag "$NEW_TAG"
git push origin "$NEW_TAG"

echo "✅ Versioning completed successfully."
exit 0
